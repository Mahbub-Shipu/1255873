@model IEnumerable<MVC_Core_Project.Models.Student>
@{
    ViewData["Title"] = "Index";
}

@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Mvc.Core.Fluent
@using X.PagedList.Web.Common


<div class="card">
    <div class="card-header">
        <h4 class="card-title">
            Create Student
        </h4>
    </div>
    <div class="card-body">
        <div class="d-flex justify-content-end mb-1">
            <div class="btn-group btn-group-sm mr-1" role="group">
                <button id="btnGroupDrop1" type="button" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="fa fa-filter"></span> Subject
                </button>
                <div class="dropdown-menu" aria-labelledby="btnGroupDrop1">
                    @*<a class="dropdown-item" asp-action="Index" asp-controller="Courses">All</a>*@

                    @foreach (Subject c in ViewBag.Subjects)
                    {
                        <a class="dropdown-item" asp-action="Index" asp-controller="Students" asp-route-subjectId="@c.SubjectId">@c.SubjectName</a>
                    }
                </div>

            </div>
            <a class="btn btn-success btn-sm" asp-action="Create" asp-controller="Students">Create</a>

        </div>
        <div class="card-text">
            <table class="table table-bordered table-striped">
                <thead class="thead-light">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.StudentId)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.StudentName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Birthday)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Address)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SubjectId)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.StudentId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.StudentName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Birthday)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Subject.SubjectName)
                        </td>
                        <td>
                            <a asp-action="Edit" asp-controller="Students" asp-route-id="@item.StudentId" class="btn btn-success btn-sm rounded-circle"><span class="fa fa-pencil"></span></a>

                            <a asp-action="Delete" asp-controller="Students" asp-route-id="@item.StudentId" class="btn btn-danger btn-sm rounded-circle"><span class="fa fa-trash"></span></a>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
            <div class="d-flex justify-content-end">
                @(Html.Pager((IPagedList)Model)
                                      .Url(page => Url.Action("Index", "Subjects", new { page = page }))
                                       .DisplayLinkToFirstPage(PagedListDisplayMode.IfNeeded)
                                                        .DisplayLinkToLastPage(PagedListDisplayMode.IfNeeded)
                                                        .DisplayLinkToPreviousPage()
                                                        .DisplayLinkToNextPage()
                                                        .MaximumPageNumbersToDisplay(3)
                                                        .DisplayPageCountAndCurrentLocation(true)
                                      .Build()
                )
            </div>
        </div>
    </div>
    <div class="card-footer">
        <a asp-action="Index"><span class="fa fa-long-arrow-left"></span> Back to List</a>
    </div>
</div>


@section scripts{
    <environment include="Development">

        <script>
            $(document).ready(() => {
                $("button.subject").click(function () {
                    console.log('ok')
                    var id = $(this).data("subject-pk");
                    $("#subject-" + id).toggle();
                    $(this).find("span").toggleClass("fa-plus-square fa-minus-square");
                });
            });
        </script>
    </environment>
}
@section styles{
    <environment include="Development">
        <link href="~/libs/PagedList/PagedList.css" rel="stylesheet" />
        <link href="~/libs/fontawesome/css/font-awesome.css" rel="stylesheet" />

    </environment>
}

